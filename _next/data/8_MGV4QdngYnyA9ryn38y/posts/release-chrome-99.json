{"pageProps":{"post":{"slug":"release-chrome-99","content":"<p>Chrome 99 のリリースノート関連の情報をまとめました。</p>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-chrome-99/\">https://developer.chrome.com/blog/new-in-chrome-99/</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-99/\">https://developer.chrome.com/blog/new-in-devtools-99/</a></li>\n<li><a href=\"https://developer.chrome.com/blog/deps-rems-99/\">https://developer.chrome.com/blog/deps-rems-99/</a></li>\n<li><a href=\"https://www.chromestatus.com/features#milestone%3D99\">https://www.chromestatus.com/features#milestone%3D99</a></li>\n<li><a href=\"https://v8.dev/blog/v8-release-99\">https://v8.dev/blog/v8-release-99</a></li>\n</ul>\n<h2>New In Chrome (Chrome 99)</h2>\n<p>Chrome99 で新しく追加された機能です。</p>\n<h3>Chrome 100 and Firefox 100</h3>\n<p>Chrome 100 は今年の 3 月下旬、Firefox100 は 5 月上旬にリリースされます。 これらは両方ともメジャーバージョン番号が 3 桁にロールオーバーするアップデートです。 UserAgent をパースしたバージョン番号を２桁として解釈しているコードがある場合、新しいバージョン番号によって問題が発生する可能性があります。</p>\n<p>Chrome では、<code>＃force-major-version-to-100</code> フラグを有効にすることで現在のバージョンを 100 に上書きし、挙動を確認することができます。</p>\n<p>また、Firefox Nightly では「設定」メニューで、「Firefox100 ユーザーエージェント文字列」オプションを有効にすることで同様の確認が可能です。 両ブラウザでバージョン番号の解釈が期待どおりに機能することを確認できるように、サイトをテストすることをお勧めします。</p>\n<h3>CSS Cascasde Layers</h3>\n<p>CSS Cascade Layers が Chrome99、Firefox 97、Safari 15.4 Beta でサポートされました！</p>\n<p>CSS セレクタの詳細度を上回るルールを<code>@layer</code>で定義することができるようになります。</p>\n<p>詳細は <a href=\"https://twitter.com/nus3_\">@nus3</a> が別途記事を書いたので次のリンクをご参考ください。</p>\n<p><a href=\"https://cybozu.github.io/frontend-expert/posts/css-cascade-layers\">https://cybozu.github.io/frontend-expert/posts/css-cascade-layers</a></p>\n<h3>showPicker() for input elements</h3>\n<p>HTML InputElements に新しく<code>showPicker（）</code>メソッドが実装されました。</p>\n<p>これにより、日付だけでなく、時間、色、その他の<code>&#x3C;input></code>要素でブラウザーピッカーを表示するための標準的な方法が整備されました。</p>\n<p>利用する場合は、以下のように<code>&#x3C;input></code>要素で<code>showPicker（）</code>を呼び出します。また<code>try…catch</code>ブロックでこれらの処理を囲う事で、ブラウザーが<code>showPicker()</code>の API をサポートしていない場合、またはピッカーを表示できない場合のフォールバックを提供できます。</p>\n<div><pre><code><span>const</span> button <span>=</span> <span>document</span><span>.</span><span>querySelector</span><span>(</span><span>\"button\"</span><span>)</span><span>;</span>\n<span>const</span> dateInput <span>=</span> <span>document</span><span>.</span><span>querySelector</span><span>(</span><span>\"input\"</span><span>)</span><span>;</span>\n\nbutton<span>.</span><span>addEventListener</span><span>(</span><span>\"click\"</span><span>,</span> <span>(</span><span>)</span> <span>=></span> <span>{</span>\n  <span>try</span> <span>{</span>\n    dateInput<span>.</span><span>showPicker</span><span>(</span><span>)</span><span>;</span>\n    <span>// Dateピッカーの表示.</span>\n  <span>}</span> <span>catch</span> <span>(</span>error<span>)</span> <span>{</span>\n    <span>// ピッカーを表示できない場合のフォールバック</span>\n  <span>}</span>\n<span>}</span><span>)</span><span>;</span>\n</code></pre></div>\n<p>参考:</p>\n<p><a href=\"https://developer.chrome.com/blog/new-in-chrome-99/#:~:text=Show%20a%20browser%20picker%20for%20date%2C%20time%2C%20color%2C%20and%20files\">Show a browser picker for date, time, color, and files</a></p>\n<h3>And more!</h3>\n<p><code>CanvasRenderingContext2D</code>に次の機能が追加されました。</p>\n<ul>\n<li>Context がロストした時や復元した時のイベントハンドリングができるように(<code>ContextLost</code>, <code>ContextRestored</code>)</li>\n<li><code>willReadFrequently</code>オプションの追加</li>\n<li><code>letter-spacing</code>など Canvas でサポートされていなかったテキストを修飾するプロパティの追加</li>\n<li>Canvas の状態をリセットする<code>reset()</code>など</li>\n</ul>\n<p>PWA のマニフェストにダークテーマに対応する設定が追加できる<a href=\"https://developer.chrome.com/origintrials/#/view_trial/4239013149262479361\">オリジントライアル</a>が開始されたました。</p>\n<p>また詳細はこの記事の後半に記載しますが、Handwriting Recognition API が使えるようになります。</p>\n<h2>What's New In DevTools (Chrome 98)</h2>\n<p>DevTools についてはこちらの日本語訳を参照ください。</p>\n<p><a href=\"https://developer.chrome.com/ja/blog/new-in-devtools-99/\">https://developer.chrome.com/ja/blog/new-in-devtools-99/</a></p>\n<p>書いてるうちにでなかったら、気になるものがあれば記載する</p>\n<h2>Deprecations and removals in Chrome 99</h2>\n<h3>Remove Battery Status API on insecure origins</h3>\n<p><code>Battery Status API</code>は、HTTP ページや HTTP ページに埋め込まれた HTTPS の iframe などの安全でないオリジンでサポートされなくなりました。</p>\n<h3>Remove font-family -webkit-standard</h3>\n<p><code>font-family</code>の値として<code>-webkit-standard</code>が削除されました。</p>\n<h3>Remove GamepadList</h3>\n<p>接続しているゲームパッドを取得できる<code>navigator.getGamepads()</code>の返り値が<code>GamepadlList</code>から<code>Gamepad</code>のオブジェクトの配列を返すようになりました。</p>\n<p>この変更により、Gecko と Webkit と同じく仕様と一致するようになります。</p>\n<p>参考:</p>\n<p><a href=\"https://web.dev/gamepad/\">Chrome でゲームパッドを使う方法</a></p>\n<h3>Update WebCodecs to match the specification</h3>\n<p>WebCodecs 仕様変更により、仕様に反していた以下の 2 つの部分について修正しました。</p>\n<ul>\n<li><code>EncodeVideoChunkMetadata</code>オブジェクト内の<code>temporalLayerId</code>の場所</li>\n<li><code>VideoFrame()</code> コンストラクタでタイムスタンプ引数を指定しなかった際の挙動変更</li>\n</ul>\n<p>詳しくは<a href=\"https://chromestatus.com/feature/5667793157488640\">こちら</a>を参照してください。</p>\n<h2>その他 Chrome Platform Status に記載されていたもの</h2>\n<h3>Feature: \"paintworklet\" destination for PaintWorklet</h3>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/Houdini\">CSS Houdini</a>の一部である<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/CSS_Painting_API\">CSS Painting API</a>で使われる PaintWorklet のリクエストの送り先が<code>script</code>から<code>paintworklet</code>になりました。</p>\n<p><code>Sec-Fetch-Dest</code>HTTP リクエストヘッダと<code>FetchEvent.request.destination</code>で適用されます。</p>\n<h3>Feature: \"audioworklet\" destination for AudioWorklet</h3>\n<p><code>Web Audio API</code>のオーディオ処理を別スレッドで実行する仕組みである、<code>AudioWorklet</code>のリクエストの送り先が<code>script</code>から<code>audioworklet</code>になりました。</p>\n<p><code>Sec-Fetch-Dest</code>HTTP リクエストヘッダと<code>FetchEvent.request.destination</code>で適用されます。</p>\n<h3>Feature: Allow infinity, -infinity and NaN in CSS calc()</h3>\n<p>CSS の<code>calc()</code>関数で<code>infinity</code>, <code>-infinity</code>, <code>NaN</code> などのキーワード、及び<code>calc(1/0)</code> のように<code>infinity</code>や<code>NaN</code>に評価される式による値を許容するようになりました。</p>\n<h3>Autofill in ShadowDOM</h3>\n<p><code>autofill</code>が<code>form</code> 要素内のフォームコントロールを収集する際に、<code>ShadowDOM</code>も参照するようになります。これにより<code>Shadow DOM</code>内部の入力フォームでも<code>autofill</code>が効くようになります。</p>\n<p>Web コンポーネントを採用する際、<code>input</code>要素のようなフォームコントロールを<code>ShadowDOM</code>で包むことが一般的になっていることを受けての改善となります。</p>\n<h3>Convert adoptedStyleSheets to use ObservableArray</h3>\n<p>document や shadowRoot に<a href=\"https://developer.mozilla.org/ja/docs/Web/API/CSSStyleSheet\">CSSStyleSheet</a>を追加できる<code>adoptedStyleShetts</code>で ObservableArray が使えるようになります。</p>\n<p>今回から push などの通常の配列操作ができるようになります。</p>\n<div><pre><code><span>document</span><span>.</span><span>adoptedStyleSheets</span> <span>=</span> <span>[</span><span>...</span>adoptedStyleSheets<span>,</span> newSheet<span>]</span><span>;</span> <span>// これまで</span>\n<span>document</span><span>.</span><span>adoptedStyleSheets</span><span>.</span><span>push</span><span>(</span>newSheet<span>)</span><span>;</span> <span>// これから</span>\n</code></pre></div>\n<h3>Handwriting Recognition API</h3>\n<p>OS などにある既存の手書きの文字認識機能を web 上で扱えるようにするための API が追加されました。</p>\n<p>※現状この API が利用できるのは ChromeOS のみで対応言語も英語に限られています。</p>\n<p>参考:</p>\n<p><a href=\"https://chromestatus.com/feature/5263213807534080\">Feature: Handwriting Recognition API</a></p>\n<h3>Unprefixed text-emphasis properties</h3>\n<p>CSS の text-emphasis プロパティが<code>-webkit</code>なしで使えるようになります。</p>\n<p>参考:</p>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/text-emphasis\">https://developer.mozilla.org/en-US/docs/Web/CSS/text-emphasis</a></p>\n<h2>V8 release v9.9</h2>\n<h3>Intl.Locale extensions</h3>\n<p>Intl.Local オブジェクトに 7 つの新しいプロパティが追加されました。</p>\n<p><code>calendars</code>, <code>collations</code>, <code>hourCycles</code>, <code>numberingSystems</code>, <code>timeZones</code>では他の Intl API で使用する好ましい識別子を返します。</p>\n<div><pre><code><span>const</span> jaLocal <span>=</span> <span>new</span> <span>Intl<span>.</span>Locale</span><span>(</span><span>\"ja\"</span><span>)</span><span>;</span>\n<span>console</span><span>.</span><span>log</span><span>(</span>jaLocal<span>.</span><span>calendars</span><span>)</span><span>;</span> <span>// ['gregory', 'japanese']</span>\n<span>console</span><span>.</span><span>log</span><span>(</span>jaLocal<span>.</span><span>collations</span><span>)</span><span>;</span> <span>// ['unihan', 'emoji', 'eor']</span>\n<span>console</span><span>.</span><span>log</span><span>(</span>jaLocal<span>.</span><span>hourCycles</span><span>)</span><span>;</span> <span>// ['h23']</span>\n<span>console</span><span>.</span><span>log</span><span>(</span>jaLocal<span>.</span><span>numberingSystems</span><span>)</span><span>;</span> <span>// ['latn']</span>\n</code></pre></div>\n<p><code>textInfo</code>はテキストに関連する情報をオブジェクトで返します。現状では CSS の direction プロパティで使用するような文字の並び順の値を返します。\n(rtl が右から左へ、ltr が左から右へ)</p>\n<div><pre><code>arabicEgyptLocale<span>.</span><span>textInfo</span><span>;</span>\n<span>// { direction: 'rtl' }</span>\njapaneseLocale<span>.</span><span>textInfo</span><span>;</span>\n<span>// { direction: 'ltr' }</span>\nchineseTaiwanLocale<span>.</span><span>textInfo</span><span>;</span>\n<span>// { direction: 'ltr' }</span>\n</code></pre></div>\n<p><code>weekInfo</code>は週に関連する情報を返します。</p>\n<div><pre><code><span>const</span> jaLocal <span>=</span> <span>new</span> <span>Intl<span>.</span>Local</span><span>(</span><span>\"ja\"</span><span>)</span><span>;</span>\n<span>console</span><span>.</span><span>log</span><span>(</span>jaLocal<span>.</span><span>weekInfo</span><span>)</span><span>;</span>\n\n<span>// 返される数字は 1 が月曜日、7 が日曜日</span>\n<span>// {</span>\n<span>//   firstDay: 7,</span>\n<span>//   weekend: [6, 7],</span>\n<span>//   minimalDays: 1,</span>\n<span>// }</span>\n</code></pre></div>\n<h3>Intl Enumeration</h3>\n<p>v8 でサポートされている識別子の配列を返す<code>Intl.supportedValuesOf(code)</code>という新しい関数が追加されました。\nサポートされるコード値は以下の 6 つです。</p>\n<p>calendar</p>\n<div><pre><code><span>Intl</span><span>.</span><span>supportedValuesOf</span><span>(</span><span>\"calendar\"</span><span>)</span><span>;</span>\n<span>// ['buddhist', 'chinese', 'coptic', 'dangi', ...]</span>\n</code></pre></div>\n<p>collation</p>\n<div><pre><code><span>Intl</span><span>.</span><span>supportedValuesOf</span><span>(</span><span>\"collation\"</span><span>)</span><span>;</span>\n<span>// ['big5han', 'compat', 'dict', 'emoji', ...]</span>\n</code></pre></div>\n<p>currency</p>\n<div><pre><code><span>Intl</span><span>.</span><span>supportedValuesOf</span><span>(</span><span>\"currency\"</span><span>)</span><span>;</span>\n<span>// ['ADP', 'AED', 'AFA', 'AFN', 'ALK', 'ALL', 'AMD', ...]</span>\n</code></pre></div>\n<p>numberingSystem</p>\n<div><pre><code><span>Intl</span><span>.</span><span>supportedValuesOf</span><span>(</span><span>\"numberingSystem\"</span><span>)</span><span>;</span>\n<span>// ['adlm', 'ahom', 'arab', 'arabext', 'bali', ...]</span>\n</code></pre></div>\n<p>timeZone</p>\n<div><pre><code><span>Intl</span><span>.</span><span>supportedValuesOf</span><span>(</span><span>\"timeZone\"</span><span>)</span><span>;</span>\n<span>// ['Africa/Abidjan', 'Africa/Accra', 'Africa/Addis_Ababa', 'Africa/Algiers', ...]</span>\n</code></pre></div>\n<p>unit</p>\n<div><pre><code><span>Intl</span><span>.</span><span>supportedValuesOf</span><span>(</span><span>\"unit\"</span><span>)</span><span>;</span>\n<span>// ['acre', 'bit', 'byte', 'celsius', 'centimeter', ...]</span>\n</code></pre></div>\n<p>この新しいメソッドによって、Web 開発者はどの値が実装でサポートされているかを簡単に発見できるようになります。</p>\n","metaData":{"title":"CSS Cascasde Layersの追加など、Chrome 99 リリースノートまとめ","author":"Saji","editor":"nus3","createdAt":"2022-03-24","summary":"Chrome 99 のリリースノートの要約です","tags":["Releasenote","Browser"],"updatedAt":"2022-03-24"}}},"__N_SSG":true}