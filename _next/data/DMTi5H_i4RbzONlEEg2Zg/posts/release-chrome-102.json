{"pageProps":{"post":{"slug":"release-chrome-102","content":"<h1>Chrome 102</h1>\n<p>Chrome 102 のリリースノート関連の情報をまとめました。</p>\n<ul>\n<li><a href=\"https://developer.chrome.com/blog/new-in-chrome-102/\">https://developer.chrome.com/blog/new-in-chrome-102/</a></li>\n<li><a href=\"https://developer.chrome.com/blog/new-in-devtools-102/\">https://developer.chrome.com/blog/new-in-devtools-102/</a></li>\n<li><a href=\"https://developer.chrome.com/blog/deps-rems-102/\">https://developer.chrome.com/blog/deps-rems-102/</a></li>\n<li><a href=\"https://www.chromestatus.com/features#milestone%3D102\">https://www.chromestatus.com/features#milestone%3D102</a></li>\n<li><a href=\"https://v8.dev/blog/v8-release-102\">https://v8.dev/blog/v8-release-102</a></li>\n</ul>\n<h2>New In Chrome (Chrome102)</h2>\n<p>Chrome102 で新しく追加された機能です。</p>\n<h3>File Handling API</h3>\n<p>PWA に MIME タイプや拡張子を紐づけることができる File Handling API がサポートされました。</p>\n<p>PWA のマニフェストに関連づけたい MIME タイプや拡張子を設定することで、Mac だと「このアプリケーションで開く」の候補に PWA のアプリケーションが選択できるようになります。</p>\n<p>参考: Let installed web applications be file handlers</p>\n<p><a href=\"https://web.dev/file-handling/\">https://web.dev/file-handling/</a></p>\n<h3>The inert property</h3>\n<p><code>inert</code>プロパティは、グローバルな HTML 属性です。<code>inert</code>属性のついた要素は、フォーカスイベントや支援技術からのイベントなど、ユーザー入力イベントを無視します。</p>\n<p><code>inert</code>属性はモーダルダイアログやドロワーなどの UI パーツを作成するのに便利です。モーダルダイアログでは、モーダルが表示されている間、フォーカスをモーダル内に限定したくなりますが、これはモーダル外の要素に<code>inert</code>属性をつけることで実現できます。また、ユーザーから常に見えるわけではないドロワーでは、開閉時に<code>inert</code>属性を切り替えることで、「画面外にあるドロワーを誤ってキーボードで操作してしまう」ような誤作動を防止できます。</p>\n<p><code>inert</code>属性の利用例です。</p>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Button 1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>label</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>inertではない<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>div</span> <span class=\"token attr-name\">inert</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Button 2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>label</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>inertである<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>div</span><span class=\"token punctuation\">></span></span>\n</code></pre></div>\n<p>この例では二つ目の<code>div</code>に<code>inert</code>属性を付与しています。そのため内包された<code>&#x3C;label></code>要素や<code>&#x3C;button></code>要素はフォーカスやクリックできない要素になります。</p>\n<p><code>inert</code>属性は Chrome では 102 からサポートされますが、FireFox や Safari でも同様にサポートされる予定です。(執筆現在、Safari は 15.5 から、FireFox は Nightly で利用可能です。)</p>\n<h3>Navigation API</h3>\n<p>近年の多く見られる SPA で作られたアプリでは、ページ移動なしで URL を更新します。この挙動を実現するため、一般的に<code>History API</code>が利用されますが、<code>History API</code>ではうまく用件を満たせないことや、動作がわかりにくくなることがあります。</p>\n<p>このような History API の問題点をカバーするべく作られた API 仕様が Navigation API です。</p>\n<h4>利用方法</h4>\n<p>Navigation API を使用するには、グローバルに生えた<code>navigation</code>オブジェクトに navigate リスナーを追加します。</p>\n<div class=\"remark-highlight\"><pre class=\"language-javascript\"><code class=\"language-javascript\">navigation<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'navigate'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">navigateEvent</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">switch</span> <span class=\"token punctuation\">(</span>navigateEvent<span class=\"token punctuation\">.</span><span class=\"token property-access\">destination</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">url</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'https://example.com/'</span><span class=\"token operator\">:</span>\n      navigateEvent<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">transitionWhile</span><span class=\"token punctuation\">(</span><span class=\"token function\">loadIndexPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword control-flow\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'https://example.com/cats'</span><span class=\"token operator\">:</span>\n      navigateEvent<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">transitionWhile</span><span class=\"token punctuation\">(</span><span class=\"token function\">loadCatsPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword control-flow\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>ナビゲーションイベントは、<code>navigate</code>リスナーによって一元化されており、以下のような条件の有無に関わらずあらゆるタイプのナビゲーションイベントで発火します。</p>\n<ul>\n<li>フォームを送信したかどうか</li>\n<li>戻る・進むアクションによる遷移か</li>\n<li>プログラムによって引き起こされたものかどうか</li>\n</ul>\n<p>その上で、ほとんどの遷移に関するアクションに対して、デフォルトの動作を上書きすることができます。</p>\n<p>詳細に関しては<a href=\"https://developer.chrome.com/docs/web-platform/navigation-api/\">Modern client-side routing: the Navigation API</a>をご覧ください。</p>\n<h3>And more!</h3>\n<ul>\n<li>ページ内検索等でヒットするまで表示されない<code>hidden=unfil-found</code>の指定ができるようになります</li>\n</ul>\n<h2>What's New In DevTools (Chrome 102)</h2>\n<p>DevTools についてはこちらの日本語訳を参照ください。</p>\n<p><a href=\"https://developer.chrome.com/ja/blog/new-in-devtools-102/\">https://developer.chrome.com/ja/blog/new-in-devtools-102/</a></p>\n<h2>Deprecations and removals in Chrome 102</h2>\n<h3>Deprecate PaymentRequest.show() without User Activation</h3>\n<p>ユーザーのアクティベーションなしに<code>PaymentRequest.show()</code>を実行できなくなりました。</p>\n<p><code>PaymentRequest.show()</code>はクリックなどのユーザーイベント内で行う必要があります。</p>\n<h3>Remove SDP Plan B</h3>\n<p>WebRTC でセッションを確立するために使用される <code>Session Description Protocol</code> (SDP) は、Chromium 上で<code>Unified Plan</code>と<code>Plan B</code>という 2 種類の異なる実装が存在しています。\n<code>Plan B</code>はクロスブラウザでの互換性がないなどの問題を抱えていたため、102 から削除されます。</p>\n<p>このバージョンから Chrome では<code>Plan B</code>を利用すると例外が投げられるようになります。これを回避したい場合は 2022 年 5 月 25 日までに<a href=\"https://developer.chrome.com/origintrials/#/view_trial/3892235977954951169\">非推奨のトライアル</a>に参加してください。また 12 月に終了した前回の非推奨トライアルに参加していて、今回のトライアルにも参加したい場合は、新しくトークンをリクエストする必要があることに注意してください。</p>\n<h2>その他 Chrome Platform Status に記載されていたもの</h2>\n<h3>Add Save Data Client Hint</h3>\n<p>Permissions-Policy に<code>CH-Save-Data</code>を追加することで Client Hint として<code>Save-Data</code>が扱えるようになります。</p>\n<p><code>Sec-CH-Save-Data</code>が適切な Client Hint になり、Permissions-Policy を介してサードパーティへ送信されることを防ぐことができます。</p>\n<p>参考: Save-Data</p>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Save-Data\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Save-Data</a></p>\n<h3>AudioContext.outputLatency</h3>\n<p><code>AudioContext.outputLatency</code>プロパティが追加されました。</p>\n<p>このプロパティは音声出力レイテンシーの推定値(秒数)を返します。技術的には、UserAgent がホストシステムにバッファの再生を要求してから、バッファ内の最初のサンプルが実際に音声出力デバイスによって処理されるまで(スピーカーなどであれば音が出るまで)の間隔を指します。</p>\n<p>このプロパティは入力から出力までのレイテンシーを調整するために必要で、ビデオとオーディオストリームの同期などに非常に有効です。</p>\n<h3>Capture Handle</h3>\n<p>ビデオキャプチャを行う他のアプリケーションに対して、特定の情報やコントロールを opt-in で公開できる仕組みを導入します。</p>\n<p>たとえば、プレゼンテーション・アプリを開いたタブをビデオキャプチャしているアプリケーションがあったとします。この機能でプレゼンテーションアプリがキャプチャをしているアプリに対して、プレゼンテーションを操作を公開するとキャプチャをしているアプリからプレゼンテーションアプリを操作できるようになります。</p>\n<p>ディスプレイキャプチャを行うアプリケーションは、キャプチャされるアプリケーションが Capture Handle 機能を提供していることを前提に、ユーザーに優れた機能性を提供できます。今までに似たような技術はありましたが、Capture Handle では、何を公開するか(オリジン・ハンドル・ID...etc)を選択可能にすることで、よりシンプルで信頼性が高く、安全な仕組みを提供します。</p>\n<p>また私たちが提案するメカニズムでは、キャプチャされたアプリケーション側で、キャプチャする側のアプリケーションを制限できます。具体的には全ての web か特定の origin かを選択できます。</p>\n<h3>HTTP->HTTPS redirect for HTTPS DNS records</h3>\n<p>DNS に問い合わせをする際に、従来の<code>A</code>および<code>AAAA</code>クエリと並行して、<code>HTTPS</code>レコードを問い合わせるようになります。ウェブサイトが<code>HTTPS</code>DNS レコードを設定していて、Chrome がそれを受信すると、Chrome は常に HTTPS で接続します。</p>\n<h3>WebHID exclusionFilters option in requestDevice()</h3>\n<p>navigator.hid.requestDevice()に<code>exclusionFilters</code>が追加されました。</p>\n<p><code>exclusionFilters</code>を指定することでブラウザから扱いたくない HID デバイスを除外することができるようになります。</p>\n<p>参考:</p>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HID/requestDevice\">https://developer.mozilla.org/en-US/docs/Web/API/HID/requestDevice</a></p>\n","metaData":{"title":"Chrome 102 リリースノートまとめ","author":"Saji","editor":"nus3","createdAt":"2022-07-05","summary":"Chrome 102 のリリースノートの要約です","tags":["Releasenote","Browser"],"updatedAt":"2022-07-05"}}},"__N_SSG":true}